{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function ContainedButtons(props) {\n  _s();\n\n  const classes = useStyles();\n\n  async function getNearSauna(e) {\n    let lat;\n    let lng;\n    await navigator.geolocation.getCurrentPosition(res => {\n      console.log(res.coords.latitude);\n      lat = res.coords.latitude;\n      let map;\n      let service;\n      const word = \"サウナ\";\n      console.log(lat);\n      console.log(lng);\n      const pyrmont = new google.maps.LatLng(lat, lng);\n      map = new google.maps.Map(document.getElementById('map'));\n      service = new google.maps.places.PlacesService(map);\n\n      function callback(results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          results.map(val => {\n            console.log(val);\n          });\n        }\n      }\n\n      service.nearbySearch({\n        query: word\n      }, callback);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: getNearSauna,\n      children: \"\\u73FE\\u5728\\u5730\\u304B\\u3089\\u63A2\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainedButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContainedButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainedButtons\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx"],"names":["React","makeStyles","Button","CompassCalibrationOutlined","google","window","useStyles","theme","root","margin","spacing","ContainedButtons","props","classes","getNearSauna","e","lat","lng","navigator","geolocation","getCurrentPosition","res","console","log","coords","latitude","map","service","word","pyrmont","maps","LatLng","Map","document","getElementById","places","PlacesService","callback","results","status","PlacesServiceStatus","OK","val","nearbySearch","query"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAgB,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAED,iBAAeQ,YAAf,CAA4BC,CAA5B,EAA8B;AAC3B,QAAIC,GAAJ;AACA,QAAIC,GAAJ;AACA,UAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,GAAD,IAAO;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,QAAvB;AACAT,MAAAA,GAAG,GAACK,GAAG,CAACG,MAAJ,CAAWC,QAAf;AACA,UAAIC,GAAJ;AACA,UAAIC,OAAJ;AACA,YAAMC,IAAI,GAAG,KAAb;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,YAAMY,OAAO,GAAG,IAAIzB,MAAM,CAAC0B,IAAP,CAAYC,MAAhB,CAAuBf,GAAvB,EAA2BC,GAA3B,CAAhB;AACAS,MAAAA,GAAG,GAAG,IAAItB,MAAM,CAAC0B,IAAP,CAAYE,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,CAAN;AACAP,MAAAA,OAAO,GAAG,IAAIvB,MAAM,CAAC0B,IAAP,CAAYK,MAAZ,CAAmBC,aAAvB,CAAqCV,GAArC,CAAV;;AACA,eAASW,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC/B,YAAIA,MAAM,IAAInC,MAAM,CAAC0B,IAAP,CAAYK,MAAZ,CAAmBK,mBAAnB,CAAuCC,EAArD,EAAyD;AACrDH,UAAAA,OAAO,CAACZ,GAAR,CAAagB,GAAD,IAAO;AAEfpB,YAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACL,WAHC;AAGC;AAEN;;AACHf,MAAAA,OAAO,CAACgB,YAAR,CAAqB;AAACC,QAAAA,KAAK,EAAChB;AAAP,OAArB,EAAkCS,QAAlC;AACL,KApBS,CAAN;AAuBC;;AAAA;AAIH,sBACE;AAAK,IAAA,SAAS,EAAExB,OAAO,CAACL,IAAxB;AAAA,2BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEM,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1CwBH,gB;UACPL,S;;;KADOK,gB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\n\nconst google = window.google;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default  function ContainedButtons(props) {\n  const classes = useStyles();\n  \n async function getNearSauna(e){\n    let lat;\n    let lng\n    await navigator.geolocation.getCurrentPosition((res)=>{\n      console.log(res.coords.latitude);\n      lat=res.coords.latitude\n      let map;\n      let service;\n      const word = \"サウナ\";\n      console.log(lat)\n      console.log(lng)\n      const pyrmont = new google.maps.LatLng(lat,lng);\n      map = new google.maps.Map(document.getElementById('map'))\n      service = new google.maps.places.PlacesService(map);\n      function callback(results, status) {\n          if (status == google.maps.places.PlacesServiceStatus.OK) {\n              results.map((val)=>{\n                \n                  console.log(val)\n            })}\n          \n        }\n      service.nearbySearch({query:word},callback)\n})\n\n\n    };\n\n\n\n  return (\n    <div className={classes.root}>\n      \n      <Button variant=\"contained\" color=\"primary\" onClick={getNearSauna}>\n        現在地から探す\n      </Button>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}