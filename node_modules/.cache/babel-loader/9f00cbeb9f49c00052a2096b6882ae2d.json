{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function ContainedButtons(props) {\n  _s();\n\n  const classes = useStyles();\n\n  async function getNearSauna(e) {\n    let lat;\n    let lng;\n    await navigator.geolocation.getCurrentPosition(res => {\n      lat = res.coords.latitude;\n      lng = res.coords.longitude;\n      let map;\n      let service;\n      console.log(lat);\n      console.log(lng);\n      const pyrmont = new google.maps.LatLng(lat, lng);\n      const request = {\n        location: pyrmont,\n        radius: ' 1000',\n        type: ['spa'],\n        keyword: \"サウナ\"\n      };\n      map = new google.maps.Map(document.getElementById('map'));\n      service = new google.maps.places.PlacesService(map);\n\n      function callback(results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results[0]);\n        } else {\n          console.log(\"a\");\n        }\n      }\n\n      service.nearbySearch(request, callback);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: getNearSauna,\n      children: \"\\u73FE\\u5728\\u5730\\u304B\\u3089\\u63A2\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainedButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContainedButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainedButtons\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx"],"names":["React","makeStyles","Button","CompassCalibrationOutlined","google","window","useStyles","theme","root","margin","spacing","ContainedButtons","props","classes","getNearSauna","e","lat","lng","navigator","geolocation","getCurrentPosition","res","coords","latitude","longitude","map","service","console","log","pyrmont","maps","LatLng","request","location","radius","type","keyword","Map","document","getElementById","places","PlacesService","callback","results","status","PlacesServiceStatus","OK","nearbySearch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAgB,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAED,iBAAeQ,YAAf,CAA4BC,CAA5B,EAA8B;AAC3B,QAAIC,GAAJ;AACA,QAAIC,GAAJ;AACA,UAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,GAAD,IAAO;AACpDL,MAAAA,GAAG,GAACK,GAAG,CAACC,MAAJ,CAAWC,QAAf;AACAN,MAAAA,GAAG,GAACI,GAAG,CAACC,MAAJ,CAAWE,SAAf;AACA,UAAIC,GAAJ;AACA,UAAIC,OAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACA,YAAMY,OAAO,GAAG,IAAIzB,MAAM,CAAC0B,IAAP,CAAYC,MAAhB,CAAuBf,GAAvB,EAA2BC,GAA3B,CAAhB;AACA,YAAMe,OAAO,GAAE;AACbC,QAAAA,QAAQ,EAACJ,OADI;AAEbK,QAAAA,MAAM,EAAE,OAFK;AAGbC,QAAAA,IAAI,EAAE,CAAC,KAAD,CAHO;AAIbC,QAAAA,OAAO,EAAC;AAJK,OAAf;AAMAX,MAAAA,GAAG,GAAG,IAAIrB,MAAM,CAAC0B,IAAP,CAAYO,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,CAAN;AACAb,MAAAA,OAAO,GAAG,IAAItB,MAAM,CAAC0B,IAAP,CAAYU,MAAZ,CAAmBC,aAAvB,CAAqChB,GAArC,CAAV;;AACA,eAASiB,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC/B,YAAIA,MAAM,IAAIxC,MAAM,CAAC0B,IAAP,CAAYU,MAAZ,CAAmBK,mBAAnB,CAAuCC,EAArD,EAAyD;AACrDnB,UAAAA,OAAO,CAACC,GAAR,CAAYe,OAAO,CAAC,CAAD,CAAnB;AAAwB,SAD5B,MACgC;AAAChB,UAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAAiB;AAEnD;;AACHF,MAAAA,OAAO,CAACqB,YAAR,CAAqBf,OAArB,EAA6BU,QAA7B;AACL,KAtBS,CAAN;AAyBC;;AAAA;AAIH,sBACE;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAACL,IAAxB;AAAA,2BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEM,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5CwBH,gB;UACPL,S;;;KADOK,gB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\n\nconst google = window.google;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default  function ContainedButtons(props) {\n  const classes = useStyles();\n  \n async function getNearSauna(e){\n    let lat;\n    let lng\n    await navigator.geolocation.getCurrentPosition((res)=>{\n      lat=res.coords.latitude\n      lng=res.coords.longitude\n      let map;\n      let service;\n      console.log(lat)\n      console.log(lng)\n      const pyrmont = new google.maps.LatLng(lat,lng);\n      const request ={\n        location:pyrmont,\n        radius: ' 1000',\n        type: ['spa'],\n        keyword:\"サウナ\"\n      }\n      map = new google.maps.Map(document.getElementById('map'))\n      service = new google.maps.places.PlacesService(map);\n      function callback(results, status) {\n          if (status == google.maps.places.PlacesServiceStatus.OK) {\n              console.log(results[0])}else{console.log(\"a\")}\n          \n        }\n      service.nearbySearch(request,callback)\n})\n\n\n    };\n\n\n\n  return (\n    <div className={classes.root}>\n      \n      <Button variant=\"contained\" color=\"primary\" onClick={getNearSauna}>\n        現在地から探す\n      </Button>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}