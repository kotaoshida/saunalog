{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}));\nexport default function GroupedSelect() {\n  _s();\n\n  const [city, setCity] = useState([]);\n  const [prefucture, setPrefucture] = useState([]);\n  const [cityForSearch, setCityForSearch] = useState(\"\");\n  const [saunaList, setSaunaList] = useState([\"a\"]);\n  useEffect(() => {\n    Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      result.map(val => {\n        setPrefucture(prev => [...prev, val]);\n      });\n    });\n  }, []);\n  const classes = useStyles();\n\n  const getCity = code => {\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`, {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      setCity([]);\n      result.map(val => {\n        setCity(prev => [...prev, val]);\n      });\n    });\n  };\n\n  const getSaunaList = city => {\n    Axios.get(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=サウナ+${city}&key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594`).then(res => {\n      const result = res.result;\n      setSaunaList([]);\n      result.map(val => {\n        setCity(prev => [...prev, val]);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select1\",\n        children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select1\",\n        onChange: e => {\n          getCity(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u90FD\\u9053\\u5E9C\\u770C\",\n          children: prefucture.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.prefCode,\n              children: val.prefName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select2\",\n        onChange: e => {\n          setCityForSearch(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u5E02\\u533A\\u753A\\u6751\",\n          children: city.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.cityName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select3\",\n        onChange: () => {\n          getSaunaList(cityForSearch);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u30B5\\u30A6\\u30CA\",\n          children: saunaList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GroupedSelect, \"dlGNGjUlmoRGV+RczU23Na34NZk=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupedSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupedSelect\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx"],"names":["React","useEffect","useState","makeStyles","InputLabel","MenuItem","ListSubheader","FormControl","Select","Axios","useStyles","theme","formControl","margin","spacing","minWidth","display","flexDirection","GroupedSelect","city","setCity","prefucture","setPrefucture","cityForSearch","setCityForSearch","saunaList","setSaunaList","get","headers","then","res","result","data","map","val","prev","classes","getCity","code","getSaunaList","e","target","value","prefCode","prefName","cityName","name"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from\"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display:\"flex\",\n    flexDirection:\"row\"\n\n  },\n}));\n\n\nexport default  function GroupedSelect() {\n\n    const [city,setCity]= useState([]);\n    const [prefucture,setPrefucture]=useState([]);\n    const [cityForSearch,setCityForSearch]=useState(\"\");\n    const [saunaList,setSaunaList]=useState([\"a\"]);\n\n    useEffect(() => {\n    　Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\",{\n            headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n                const result=res.data.result\n                result.map((val)=>{\n                   setPrefucture(prev=>[...prev,val])})\n\n                })            \n        },[]);\n\n  const classes = useStyles();\n\n  const getCity=(code)=>{\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`,{\n        headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n            const result=res.data.result\n            setCity([]);\n            result.map((val)=>{\n                setCity(prev=>[...prev,val])})\n        })\n                     };\n\n    const getSaunaList=(city)=>{\n    Axios.get(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=サウナ+${city}&key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594`).then((res)=>{\n            const result=res.result\n            setSaunaList([]);\n            result.map((val)=>{\n                setCity(prev=>[...prev,val])})\n        })\n                        };\n\n\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select1\">都道府県</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select1\" onChange={(e)=>{getCity(e.target.value)}}>\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"都道府県\">\n                {prefucture.map((val)=>{\n                    return(\n                    <option value={val.prefCode}>{val.prefName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          <InputLabel htmlFor=\"grouped-native-select2\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select2\" onChange={(e)=>{\n              setCityForSearch(e.target.value)\n              }}>\n          <option aria-label=\"None\"/>\n          <optgroup label=\"市区町村\">\n                {city.map((val)=>{\n                    return(\n                    <option >{val.cityName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          <InputLabel htmlFor=\"grouped-native-select3\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select3\" onChange={()=>{getSaunaList(cityForSearch)}}>\n          <option aria-label=\"None\"/>\n          <optgroup label= \"サウナ\">\n                {saunaList.map((val)=>{\n                    return(\n                    <option >{val.name}</option>)\n                })}\n          </optgroup>\n          </Select>\n      </FormControl>\n    </div>\n  );\n    }"]},"metadata":{},"sourceType":"module"}