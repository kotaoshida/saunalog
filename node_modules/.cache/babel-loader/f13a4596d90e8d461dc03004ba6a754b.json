{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from \"axios\";\nimport ScriptTag from 'react-script-tag';\nimport { compose, withProps, withHandlers, withState } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this),\n  containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `400px`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 27\n  }, this),\n  mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this)\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', ''), withHandlers(() => {\n  const refs = {\n    map: undefined\n  };\n  return {\n    onMapMounted: () => ref => {\n      refs.map = ref;\n    },\n    fetchPlaces: ({\n      updatePlaces\n    }) => {\n      let places;\n      const bounds = refs.map.getBounds();\n      const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      const request = {\n        bounds: bounds,\n        type: ['hotel']\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results);\n          updatePlaces(results);\n        }\n      });\n    }\n  };\n}))(props => {\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onBoundsChanged: props.fetchPlaces,\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 51.508530,\n      lng: -0.076132\n    },\n    children: props.places && props.places.map((place, i) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n});\nvar service = new google.maps.places.PlacesService(map);\nservice.findPlaceFromQuery({\n  query: 'マルティスープ',\n  fields: ['name', 'formatted_address', 'geometry', 'place_id']\n}, function (results, status) {\n  if (status == google.maps.places.PlacesServiceStatus.OK) {\n    // 配列となっていますが、1件しか返ってきません\n    for (var i = 0; i < results.length; i++) {\n      var place = results[i];\n      console.log(place);\n    }\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}));\nexport default function GroupedSelect() {\n  _s();\n\n  const [city, setCity] = useState([]);\n  const [prefucture, setPrefucture] = useState([]);\n  const [cityForSearch, setCityForSearch] = useState(\"\");\n  const [saunaList, setSaunaList] = useState([\"a\"]);\n  useEffect(() => {\n    Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      result.map(val => {\n        setPrefucture(prev => [...prev, val]);\n      });\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://maps.googleapis.com/maps/api/js?key=` + \"AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594\" + `&libraries=geometry,places`;\n      script.id = 'googleMaps';\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n      script.addEventListener('load', e => {\n        this.onScriptLoad();\n      });\n    });\n  }, []);\n  const classes = useStyles();\n\n  const getCity = code => {\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`, {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      setCity([]);\n      result.map(val => {\n        setCity(prev => [...prev, val]);\n      });\n    });\n  };\n\n  const getSaunaList = city => {\n    Axios.get(`https://maps.googleapis.com/maps/api/place/textsearch/json?query=サウナ+${city}&key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594`).then(res => {\n      const result = res.result;\n      setSaunaList([]);\n      result.map(val => {\n        setCity(prev => [...prev, val]);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select1\",\n        children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select1\",\n        onChange: e => {\n          getCity(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u90FD\\u9053\\u5E9C\\u770C\",\n          children: prefucture.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.prefCode,\n              children: val.prefName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select2\",\n        onChange: e => {\n          setCityForSearch(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u5E02\\u533A\\u753A\\u6751\",\n          children: city.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.cityName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        defaultValue: \"\",\n        id: \"grouped-native-select3\",\n        onChange: () => {\n          getSaunaList(cityForSearch);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"\\u30B5\\u30A6\\u30CA\",\n          children: saunaList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GroupedSelect, \"dlGNGjUlmoRGV+RczU23Na34NZk=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupedSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupedSelect\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx"],"names":["React","useEffect","useState","makeStyles","InputLabel","MenuItem","ListSubheader","FormControl","Select","Axios","ScriptTag","compose","withProps","withHandlers","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","Loader","google","window","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","refs","map","undefined","onMapMounted","ref","fetchPlaces","updatePlaces","places","bounds","getBounds","service","maps","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","request","type","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","props","lat","lng","place","i","geometry","location","findPlaceFromQuery","query","fields","length","useStyles","theme","formControl","margin","spacing","minWidth","display","flexDirection","GroupedSelect","city","setCity","prefucture","setPrefucture","cityForSearch","setCityForSearch","saunaList","setSaunaList","get","headers","then","res","result","data","val","prev","script","document","createElement","src","id","async","defer","body","appendChild","addEventListener","e","onScriptLoad","classes","getCity","code","getSaunaList","target","value","prefCode","prefName","cityName","name"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from\"axios\";\nimport ScriptTag from 'react-script-tag';\nimport { compose, withProps, withHandlers, withState } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\nimport { Loader } from \"@googlemaps/js-api-loader\"\n\nconst google = window.google;\n\n\n\nconst MyMapComponent = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces', ''),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n        }\n\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces }) => {\n                let places;\n                const bounds = refs.map.getBounds();\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                const request = {\n                    bounds: bounds,\n                    type: ['hotel']\n                };\n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        console.log(results);\n                        updatePlaces(results);\n                    }\n                })\n            }\n        }\n    }),\n)((props) => {\n    return (\n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onBoundsChanged={props.fetchPlaces}\n            defaultZoom={8}\n            defaultCenter={{ lat: 51.508530, lng: -0.076132 }}\n        >\n            {props.places && props.places.map((place, i) =>\n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n            )}\n        </GoogleMap>\n    )\n})\n\nvar service = new google.maps.places.PlacesService(map);\nservice.findPlaceFromQuery({\n    query: 'マルティスープ',\n    fields: ['name', 'formatted_address', 'geometry', 'place_id']\n}, function(results, status) {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n        // 配列となっていますが、1件しか返ってきません\n        for (var i = 0; i < results.length; i++) {\n            var place = results[i];\n            console.log(place);\n        }\n    }\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display:\"flex\",\n    flexDirection:\"row\"\n\n  },\n}));\n\n\n\n\nexport default  function GroupedSelect() {\n\n    const [city,setCity]= useState([]);\n    const [prefucture,setPrefucture]=useState([]);\n    const [cityForSearch,setCityForSearch]=useState(\"\");\n    const [saunaList,setSaunaList]=useState([\"a\"]);\n\n    useEffect(() => {\n    　Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\",{\n            headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n                const result=res.data.result\n                result.map((val)=>{\n                   setPrefucture(prev=>[...prev,val])})\n\n                   const script = document.createElement('script');\n                   script.type = 'text/javascript';\n                   script.src = `https://maps.googleapis.com/maps/api/js?key=` + \"AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594\" + `&libraries=geometry,places`;\n                   script.id = 'googleMaps';\n                   script.async = true;\n                   script.defer = true;\n                   document.body.appendChild(script);\n                   script.addEventListener('load', e => {\n                       this.onScriptLoad()\n                   })\n         ;\n                })            \n        },[]);\n\n  const classes = useStyles();\n\n  const getCity=(code)=>{\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`,{\n        headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n            const result=res.data.result\n            setCity([]);\n            result.map((val)=>{\n                setCity(prev=>[...prev,val])})\n        })\n                     };\n\n    const getSaunaList=(city)=>{\n    Axios.get(`https://maps.googleapis.com/maps/api/place/textsearch/json?query=サウナ+${city}&key=AIzaSyD7UflDjHf3NfCuXyGKBNO6iQMcgz_T594`).then((res)=>{\n            const result=res.result\n            setSaunaList([]);\n            result.map((val)=>{\n                setCity(prev=>[...prev,val])})\n        })\n                        };\n\n  return (\n\n    \n    <div>\n    \n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select1\">都道府県</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select1\" onChange={(e)=>{getCity(e.target.value)}}>\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"都道府県\">\n                {prefucture.map((val)=>{\n                    return(\n                    <option value={val.prefCode}>{val.prefName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          <InputLabel htmlFor=\"grouped-native-select2\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select2\" onChange={(e)=>{\n              setCityForSearch(e.target.value)\n              }}>\n          <option aria-label=\"None\"/>\n          <optgroup label=\"市区町村\">\n                {city.map((val)=>{\n                    return(\n                    <option >{val.cityName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          <InputLabel htmlFor=\"grouped-native-select3\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select3\" onChange={()=>{getSaunaList(cityForSearch)}}>\n          <option aria-label=\"None\"/>\n          <optgroup label= \"サウナ\">\n                {saunaList.map((val)=>{\n                    return(\n                    <option >{val.name}</option>)\n                })}\n          </optgroup>\n          </Select>\n      </FormControl>\n    </div>\n  );\n    }"]},"metadata":{},"sourceType":"module"}