{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function ContainedButtons(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const getNearSauna = e => {\n    let lat;\n    let lng;\n    navigator.geolocation.getCurrentPosition().then(res => {\n      lat = res.coords.latitude;\n      lng = res.coords.longitude;\n    });\n    let map;\n    let service;\n    const word = \"サウナ\";\n    console.log(lat);\n    console.log(lng);\n    const pyrmont = new google.maps.LatLng(lat, lng);\n    map = new google.maps.Map(document.getElementById('map'));\n    service = new google.maps.places.PlacesService(map);\n\n    function callback(results, status) {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        results.map(val => {\n          console.log(val);\n        });\n      }\n    }\n\n    service.nearbySearch({\n      query: word\n    }, callback);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: getNearSauna,\n      children: \"\\u73FE\\u5728\\u5730\\u304B\\u3089\\u63A2\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainedButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContainedButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainedButtons\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/place/place.jsx"],"names":["React","makeStyles","Button","CompassCalibrationOutlined","google","window","useStyles","theme","root","margin","spacing","ContainedButtons","props","classes","getNearSauna","e","lat","lng","navigator","geolocation","getCurrentPosition","then","res","coords","latitude","longitude","map","service","word","console","log","pyrmont","maps","LatLng","Map","document","getElementById","places","PlacesService","callback","results","status","PlacesServiceStatus","OK","val","nearbySearch","query"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAEA,QAAMQ,YAAY,GAAEC,CAAD,IAAK;AACtB,QAAIC,GAAJ;AACA,QAAIC,GAAJ;AACAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,GAA2CC,IAA3C,CAAiDC,GAAD,IAAO;AAACN,MAAAA,GAAG,GAACM,GAAG,CAACC,MAAJ,CAAWC,QAAf;AAAwBP,MAAAA,GAAG,GAACK,GAAG,CAACC,MAAJ,CAAWE,SAAf;AAAyB,KAAzG;AACA,QAAIC,GAAJ;AACA,QAAIC,OAAJ;AACA,UAAMC,IAAI,GAAG,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACA,UAAMc,OAAO,GAAG,IAAI3B,MAAM,CAAC4B,IAAP,CAAYC,MAAhB,CAAuBjB,GAAvB,EAA2BC,GAA3B,CAAhB;AACAS,IAAAA,GAAG,GAAG,IAAItB,MAAM,CAAC4B,IAAP,CAAYE,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,CAAN;AACAT,IAAAA,OAAO,GAAG,IAAIvB,MAAM,CAAC4B,IAAP,CAAYK,MAAZ,CAAmBC,aAAvB,CAAqCZ,GAArC,CAAV;;AACA,aAASa,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAIA,MAAM,IAAIrC,MAAM,CAAC4B,IAAP,CAAYK,MAAZ,CAAmBK,mBAAnB,CAAuCC,EAArD,EAAyD;AACrDH,QAAAA,OAAO,CAACd,GAAR,CAAakB,GAAD,IAAO;AAEff,UAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACL,SAHC;AAGC;AAEN;;AACHjB,IAAAA,OAAO,CAACkB,YAAR,CAAqB;AAACC,MAAAA,KAAK,EAAClB;AAAP,KAArB,EAAkCW,QAAlC;AAEC,GAtBH;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACL,IAAxB;AAAA,2BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEM,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAtCuBH,gB;UACNL,S;;;KADMK,gB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\n\nconst google = window.google;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ContainedButtons(props) {\n  const classes = useStyles();\n  \n  const getNearSauna=(e)=>{\n    let lat;\n    let lng\n    navigator.geolocation.getCurrentPosition().then((res)=>{lat=res.coords.latitude;lng=res.coords.longitude})\n    let map;\n    let service;\n    const word = \"サウナ\";\n    console.log(lat)\n    console.log(lng)\n    const pyrmont = new google.maps.LatLng(lat,lng);\n    map = new google.maps.Map(document.getElementById('map'))\n    service = new google.maps.places.PlacesService(map);\n    function callback(results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n            results.map((val)=>{\n              \n                console.log(val)\n          })}\n        \n      }\n    service.nearbySearch({query:word},callback)\n\n    };\n\n\n\n  return (\n    <div className={classes.root}>\n      \n      <Button variant=\"contained\" color=\"primary\" onClick={getNearSauna}>\n        現在地から探す\n      </Button>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}