{"ast":null,"code":"var _jsxFileName = \"/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}));\nconst google = window.google;\nexport default function GroupedSelect() {\n  _s();\n\n  const [city, setCity] = useState([]);\n  const [prefucture, setPrefucture] = useState([]);\n  const [cityForSearch, setCityForSearch] = useState(\"\");\n  const [saunaList, setSaunaList] = useState([\"a\"]);\n  useEffect(() => {\n    Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      result.map(val => {\n        setPrefucture(prev => [...prev, val]);\n      });\n    });\n  }, []);\n  const classes = useStyles();\n\n  const getCity = code => {\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`, {\n      headers: {\n        \"X-API-KEY\": \"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"\n      }\n    }).then(res => {\n      const result = res.data.result;\n      setCity([]);\n      result.map(val => {\n        setCity(prev => [...prev, val]);\n      });\n    });\n  };\n\n  const getSaunaList = e => {\n    setCityForSearch(e.target.value);\n    let map;\n    let service;\n    const word = \"サウナ\" + cityForSearch;\n    console.log(word);\n    map = new google.maps.Map(document.getElementById('map'));\n    service = new google.maps.places.PlacesService(map);\n\n    function callback(results, status) {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        results.map(val => {\n          setSaunaList(prev => [...prev, val]);\n          console.log(val);\n        });\n      }\n    }\n\n    service.textSearch({\n      query: word\n    }, callback);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-native-select1\",\n          children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          native: true,\n          defaultValue: \"\",\n          id: \"grouped-native-select1\",\n          onChange: e => {\n            getCity(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"aria-label\": \"None\",\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"\\u90FD\\u9053\\u5E9C\\u770C\",\n            children: prefucture.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val.prefCode,\n                children: val.prefName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-native-select2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          native: true,\n          defaultValue: \"\",\n          id: \"grouped-native-select2\",\n          onChange: e => {\n            getSaunaList(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"aria-label\": \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"\\u5E02\\u533A\\u753A\\u6751\",\n            children: city.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.cityName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-native-select3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          native: true,\n          defaultValue: \"\",\n          id: \"grouped-native-select3\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"aria-label\": \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"\\u30B5\\u30A6\\u30CA\",\n            children: saunaList.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GroupedSelect, \"dlGNGjUlmoRGV+RczU23Na34NZk=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupedSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupedSelect\");","map":{"version":3,"sources":["/Users/kotaoshida/Desktop/Project/saunalog/cliant/src/components/helper/dialog/select.jsx"],"names":["React","useEffect","useState","makeStyles","InputLabel","MenuItem","ListSubheader","FormControl","Select","Axios","useStyles","theme","formControl","margin","spacing","minWidth","display","flexDirection","google","window","GroupedSelect","city","setCity","prefucture","setPrefucture","cityForSearch","setCityForSearch","saunaList","setSaunaList","get","headers","then","res","result","data","map","val","prev","classes","getCity","code","getSaunaList","e","target","value","service","word","console","log","maps","Map","document","getElementById","places","PlacesService","callback","results","status","PlacesServiceStatus","OK","textSearch","query","prefCode","prefName","cityName","name"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from\"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display:\"flex\",\n    flexDirection:\"row\"\n\n  },\n}));\n\nconst google = window.google;\n\nexport default  function GroupedSelect() {\n\n    const [city,setCity]= useState([]);\n    const [prefucture,setPrefucture]=useState([]);\n    const [cityForSearch,setCityForSearch]=useState(\"\");\n    const [saunaList,setSaunaList]=useState([\"a\"]);\n\n    useEffect(() => {\n    　Axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\",{\n            headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n                const result=res.data.result\n                result.map((val)=>{\n                   setPrefucture(prev=>[...prev,val])})\n                })            \n        },[]);\n\n  const classes = useStyles();\n\n  const getCity=(code)=>{\n    Axios.get(`https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=${code}`,{\n        headers:{\"X-API-KEY\":\"JZ6Nzmm6F54YU3FD7RvDEZ1qUU9RgpbGF1GdkObS\"}}).then((res)=>{\n            const result=res.data.result\n            setCity([]);\n            result.map((val)=>{\n                setCity(prev=>[...prev,val])})\n        })\n                     };\n\n    const getSaunaList=(e)=>{\n        setCityForSearch(e.target.value);\n        let map;\n        let service;\n        const word = \"サウナ\"+cityForSearch;\n        console.log(word)\n        map = new google.maps.Map(document.getElementById('map'))\n        service = new google.maps.places.PlacesService(map);\n        function callback(results, status) {\n            if (status == google.maps.places.PlacesServiceStatus.OK) {\n                results.map((val)=>{\n                    setSaunaList(prev=>[...prev,val])\n                    console.log(val)\n              })}\n            \n          }\n        service.textSearch({query:word},callback)\n        };\n\n  return (\n    \n    <div>\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select1\">都道府県</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select1\" onChange={(e)=>{getCity(e.target.value)}}>\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"都道府県\">\n                {prefucture.map((val)=>{\n                    return(\n                    <option value={val.prefCode}>{val.prefName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          </FormControl>\n     </div>     \n     <div>\n          <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-native-select2\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select2\" onChange={(e)=>{\n              getSaunaList(e);\n              }}>\n          <option aria-label=\"None\"/>\n          <optgroup label=\"市区町村\">\n                {city.map((val)=>{\n                    return(\n                    <option >{val.cityName}</option>)\n                })}\n          </optgroup>\n          </Select>\n          </FormControl>\n\n        </div>\n    <div>\n          <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-native-select3\"></InputLabel>\n          <Select native defaultValue=\"\" id=\"grouped-native-select3\">\n          <option aria-label=\"None\"/>\n          <optgroup label= \"サウナ\">\n                {saunaList.map((val)=>{\n                    return(\n                    <option >{val.name}</option>)\n                })}\n          </optgroup>\n          </Select>\n      </FormControl>\n    </div>\n    </div>\n  );\n    }"]},"metadata":{},"sourceType":"module"}