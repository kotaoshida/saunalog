"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generatePackageStructure = void 0;
const Yarn = __importStar(require("./yarn"));
const foundDataToYarnLockObject = (found) => {
    return Object.values(found).reduce((data, pkg) => {
        if (pkg.data.name && pkg.data.version) {
            data[`${pkg.data.name}@${pkg.data.version}`] = {
                version: pkg.data.version,
                dependencies: { ...pkg.data.dependencies, ...pkg.data.devDependencies },
            };
        }
        return data;
    }, {});
};
const generatePackageStructure = ({ type, data }, found, isTargetCallback, isIgnoreTarget) => {
    if (type === "yarn") {
        const convertedData = foundDataToYarnLockObject(found);
        return Yarn.generateDisplayPackageData({ ...data, ...convertedData }, isTargetCallback, isIgnoreTarget);
    }
    throw new Error("Please choice type 'yarn' or 'npm'");
};
exports.generatePackageStructure = generatePackageStructure;
