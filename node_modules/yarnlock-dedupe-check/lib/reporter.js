"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateReport = void 0;
const preact_1 = require("preact");
const preact_render_to_string_1 = require("preact-render-to-string");
const report_1 = require("./template/report");
const convertPackageDataToRow = (pkgData) => {
    const packageRows = [];
    pkgData.dependencies.forEach(dependency => {
        if (dependency.usingPackages.length > 0) {
            dependency.usingPackages.forEach(usingPkg => {
                const relationColumn = { text: `${usingPkg.name}@${usingPkg.version}` };
                packageRows.push({ columns: [{ text: pkgData.name }, { text: dependency.realUsedVersion }, relationColumn] });
            });
        }
        else {
            packageRows.push({ columns: [{ text: pkgData.name }, { text: dependency.realUsedVersion }, { text: "skip search" }] });
        }
    });
    return packageRows;
};
const convertReportProps = (categorizedData) => {
    const errorRowsList = categorizedData.errors.map(convertPackageDataToRow);
    const warningRowsList = categorizedData.warning.map(convertPackageDataToRow);
    return {
        errorRows: errorRowsList.reduce((all, row) => all.concat(row), []),
        warningRows: warningRowsList.reduce((all, row) => all.concat(row), []),
    };
};
const generateReport = (data) => {
    const props = convertReportProps(data);
    return "<!doctype html>" + preact_render_to_string_1.render(preact_1.h(report_1.Report, Object.assign({}, props)));
};
exports.generateReport = generateReport;
